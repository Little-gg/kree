---
# tasks file for kree

- name: install sshpass support
  yum:
    name: sshpass
    state: present

- name: copy kree codes
  git:
    repo: https://github.com/Little-gg/kree
    dest: "{{ kree_dir }}"
    force: yes
  ignore_errors: yes
  register: result

- name: update kree codes
  shell: "cd {{ kree_dir }}; git pull"
  when: result|failed

- name: ensure log directory
  file:
    path: "{{ log_dir }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"

- name: change log debug level
  template:
    src: logger.py.j2
    dest: "{{ kree_dir }}/main/config/logger.py"

- name: install kree config
  template:
    src: config.py.j2
    dest: "{{ kree_dir }}/main/config/config.py"

- name: install wsgi
  template:
    src: kree.wsgi.j2
    dest: "{{ kree_dir }}/kree.wsgi"

- name: ensure ansible config directory
  file:
    path: /etc/ansible
    state: directory

- name: create ansible config
  template:
    src: ansible.cfg.j2
    dest: /etc/ansible/ansible.cfg

- name: enable no host key checking in ssh
  lineinfile:
    dest: /etc/ssh/ssh_config
    state: present
    regexp: ^UserKnownHostsFile(.*)
    line: 'UserKnownHostsFile /dev/null'

- name: disable fingerprint checking in ssh
  lineinfile:
    dest: /etc/ssh/ssh_config
    state: present
    regexp: ^StrictHostKeyChecking(.*)
    line: 'StrictHostKeyChecking no'

- name: config apache config
  template:
    src: kree.conf.j2
    dest: /etc/httpd/conf.d/kree.conf

- name: change codes owner
  file:
    path: "{{ kree_dir }}"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
    recurse: yes
  notify:
    - restart apache
    - restart celery

- name: change apache user home directory owner
  file:
    path: /usr/share/httpd
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"

- name: override callback log owner
  file: 
    path: "{{ log_dir }}/callback.log"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"
  ignore_errors: yes

- name: create playbooks directory
  file:
    path: "{{ playbooks_dir }}"
    state: directory
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"

- name: create sample playbook
  copy:
    src: files/sample
    dest: "{{ playbooks_dir }}/"
    owner: "{{ apache_user }}"
    group: "{{ apache_group }}"

- name: chown ansible tmp dir
  file:
      path: /tmp/.ansible
      owner: "{{ apache_user }}"
      group: "{{ apache_group }}"
      recurse: yes
